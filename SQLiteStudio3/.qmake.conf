top_srcdir=$$PWD
top_builddir=$$shadowed($$PWD)


win32|macx: {
    CONFIG *= portable
}
portable: message("Building portable version")

# NOTE: `This option has no effect if the compiler does not support C++11`
CONFIG += c++11


DESTDIR     = $$top_builddir/SQLiteStudio
linux: portable: DESTDIR = $$DESTDIR/lib
OBJECTS_DIR = $$top_builddir/build
MOC_DIR     = $$top_builddir/build
UI_DIR      = $$top_builddir/build

unix: {
    isEmpty(LIBDIR): LIBDIR = /usr/lib
    export(LIBDIR)

    isEmpty(BINDIR): BINDIR = /usr/bin
    export(BINDIR)
}


portable: DEFINES += PORTABLE_CONFIG
unix: DEFINES += SYS_PLUGINS_DIR=$$LIBDIR/sqlitestudio


debug: QMAKE_CXXFLAGS += -pedantic
portable: QMAKE_LFLAGS += -Wl,-rpath,.


LIBS += -L$$DESTDIR
linux: portable: LIBS += -L$$DESTDIR/lib


INCLUDEPATH += $$top_srcdir/coreSQLiteStudio
DEPENDPATH += $$top_srcdir/coreSQLiteStudio
contains(QT, gui): {
    INCLUDEPATH += $$top_srcdir/guiSQLiteStudio $$top_builddir/build/guiSQLiteStudio
    DEPENDPATH += $$top_srcdir/guiSQLiteStudio
}


macx: {
    QMAKE_CXXFLAGS += -Wno-gnu-zero-variadic-macro-arguments -Wno-overloaded-virtual
    INCLUDEPATH += $$PWD/../../include
    LIBS += -L$$PWD/../../lib
}
win32: {
    INCLUDEPATH += $$PWD/../../include $$PWD/../../include/quazip
    LIBS += -L$$PWD/../../lib
}
